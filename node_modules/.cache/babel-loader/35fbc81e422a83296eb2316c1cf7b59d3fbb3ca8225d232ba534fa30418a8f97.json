{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Login/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\nimport MainButton from \"../Reusable/MainButton\";\nimport PasswordInput from \"../Reusable/PasswordInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isError = useSelector(state => state.auth.error);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6);\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim().length >= 6);\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n  let validationError = false;\n  if (emailInputHasError || passwordInputHasError) {\n    validationError = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"This email already exists\");\n      }\n      const data = await response.json();\n      dispatch(authActions.logIn(data.idToken));\n    };\n    sendRequest().catch(err => {\n      dispatch(authActions.showError(err.message));\n    });\n    document.activeElement.blur();\n    resetEmailInput();\n    resetPasswordInput();\n  };\n  const signInHandler = () => {\n    history.replace(\"/login\");\n    dispatch(authActions.removeError());\n  };\n  const emailInputClasses = emailInputHasError || isError ? `formInput wrongCredentials` : `formInput`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loginForm,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"You have successfully registered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoMain,\n      alt: \"keysee\",\n      className: classes.mainLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"+8RBud6r90ISTERMKWD8vq+f4mA=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useInput, useInput];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","classes","logoMain","useInput","useHistory","useDispatch","useSelector","authActions","MainButton","PasswordInput","LoginForm","history","dispatch","isError","state","auth","error","value","enteredEmail","hasError","emailInputHasError","isValid","enteredEmailIsValid","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","inputFocusHandler","emailFocusHandler","reset","resetEmailInput","includes","trim","length","enteredPassword","passwordInputHasError","enteredPasswordIsValid","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","formIsValid","validationError","submitHandler","event","preventDefault","sendRequest","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","ok","Error","data","json","logIn","idToken","catch","err","showError","message","document","activeElement","blur","signInHandler","replace","removeError","emailInputClasses","container","loginForm","mainLogo"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Login/RegisterForm.js"],"sourcesContent":["import React from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\nimport MainButton from \"../Reusable/MainButton\";\nimport PasswordInput from \"../Reusable/PasswordInput\";\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isError = useSelector((state) => state.auth.error);\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput,\n  } = useInput(\n    (value) =>\n      value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6\n  );\n\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim().length >= 6);\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  let validationError = false;\n  if (emailInputHasError || passwordInputHasError) {\n    validationError = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"This email already exists\");\n      }\n\n      const data = await response.json();\n      dispatch(authActions.logIn(data.idToken));\n    };\n\n    sendRequest().catch((err) => {\n      dispatch(authActions.showError(err.message));\n    });\n\n    document.activeElement.blur();\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const signInHandler = () => {\n    history.replace(\"/login\");\n    dispatch(authActions.removeError());\n  };\n\n  const emailInputClasses =\n    emailInputHasError || isError ? `formInput wrongCredentials` : `formInput`;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.loginForm}>\n        <span>You have successfully registered!</span>\n      </div>\n      {/* <form onSubmit={submitHandler} className={classes.loginForm}>\n        <h1>Sign Up</h1>\n        <div className={classes.newUser}>\n          <p>Have an account?</p>\n          <span onClick={signInHandler}>Sign in.</span>\n        </div>\n        <div className=\"inputsContainer\">\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            className={emailInputClasses}\n            value={enteredEmail}\n            onChange={emailChangedHandler}\n            onBlur={emailBlurHandler}\n            onFocus={emailFocusHandler}\n          ></input>\n          <PasswordInput\n            enteredPassword={enteredPassword}\n            passwordInputHasError={passwordInputHasError}\n            enteredPasswordIsValid={enteredPasswordIsValid}\n            passwordChangedHandler={passwordChangedHandler}\n            passwordBlurHandler={passwordBlurHandler}\n            resetPasswordInput={resetPasswordInput}\n            placeholder=\"Password\"\n          />\n        </div>\n        {validationError && (\n          <p className={classes.errorText}>\n            Please enter correct email & password.\n          </p>\n        )}\n        {isError && <p className={classes.errorText}>{isError.errorMessage}</p>}\n        <MainButton title=\"Sign Up\" type=\"submit\" disabled={!formIsValid} />\n      </form> */}\n      <img src={logoMain} alt=\"keysee\" className={classes.mainLogo} />\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}