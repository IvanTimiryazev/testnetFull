{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/ResetPassword/EmailForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"../Login/AuthForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport MainButton from \"../Reusable/MainButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailForm = () => {\n  _s();\n  const [emailSent, setEmailSent] = useState(false);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6);\n  const formIsValid = enteredEmailIsValid;\n  const submitHandler = event => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          requestType: \"PASSWORD_RESET\",\n          email: enteredEmail\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n      document.activeElement.blur();\n      resetEmailInput();\n      setEmailSent(true);\n      setTimeout(() => {\n        setEmailSent(false);\n        history.replace(\"/\");\n      }, 2000);\n    };\n    sendRequest().catch(err => console.log(err.message));\n  };\n  const emailInputClasses = emailInputHasError ? `formInput wrongCredentials` : `formInput`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: classes.loginForm,\n      children: [!emailSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reset password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputsContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: emailInputClasses,\n            value: enteredEmail,\n            onChange: emailChangedHandler,\n            onBlur: emailBlurHandler,\n            onFocus: emailFocusHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n          title: \"Send email\",\n          type: \"submit\",\n          disabled: !formIsValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), emailSent && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.sucessReg,\n        children: \"The password reset link was just sent to your email. You can find it there!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoMain,\n      alt: \"keysee\",\n      className: classes.mainLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailForm, \"vi1G1ZCIQihvVNMpqHYKYjj42xo=\", false, function () {\n  return [useInput];\n});\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","useState","classes","logoMain","useInput","MainButton","EmailForm","emailSent","setEmailSent","value","enteredEmail","hasError","emailInputHasError","isValid","enteredEmailIsValid","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","inputFocusHandler","emailFocusHandler","reset","resetEmailInput","includes","trim","length","formIsValid","submitHandler","event","preventDefault","sendRequest","response","fetch","method","body","JSON","stringify","requestType","email","ok","Error","document","activeElement","blur","setTimeout","history","replace","catch","err","console","log","message","emailInputClasses","container","loginForm","sucessReg","mainLogo"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/ResetPassword/EmailForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport classes from \"../Login/AuthForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport MainButton from \"../Reusable/MainButton\";\n\nconst EmailForm = () => {\n  const [emailSent, setEmailSent] = useState(false);\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput,\n  } = useInput(\n    (value) =>\n      value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6\n  );\n\n  const formIsValid = enteredEmailIsValid;\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            requestType: \"PASSWORD_RESET\",\n            email: enteredEmail,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n\n      document.activeElement.blur();\n      resetEmailInput();\n      setEmailSent(true);\n      setTimeout(() => {\n        setEmailSent(false);\n        history.replace(\"/\");\n      }, 2000);\n    };\n\n    sendRequest().catch((err) => console.log(err.message));\n  };\n\n  const emailInputClasses = emailInputHasError\n    ? `formInput wrongCredentials`\n    : `formInput`;\n\n  return (\n    <div className={classes.container}>\n      <form onSubmit={submitHandler} className={classes.loginForm}>\n        {!emailSent && (\n          <>\n            <h1>Reset password</h1>\n            <div className=\"inputsContainer\">\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                className={emailInputClasses}\n                value={enteredEmail}\n                onChange={emailChangedHandler}\n                onBlur={emailBlurHandler}\n                onFocus={emailFocusHandler}\n              />\n            </div>\n            <MainButton\n              title=\"Send email\"\n              type=\"submit\"\n              disabled={!formIsValid}\n            />\n          </>\n        )}\n        {emailSent && (\n          <span className={classes.sucessReg}>\n            The password reset link was just sent to your email. You can find it\n            there!\n          </span>\n        )}\n      </form>\n      <img src={logoMain} alt=\"keysee\" className={classes.mainLogo} />\n    </div>\n  );\n};\n\nexport default EmailForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}