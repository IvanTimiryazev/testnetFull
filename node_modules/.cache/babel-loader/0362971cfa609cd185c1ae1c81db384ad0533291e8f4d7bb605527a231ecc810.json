{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Login/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\nimport MainButton from \"../Reusable/MainButton\";\nimport PasswordInput from \"../Reusable/PasswordInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isError = useSelector(state => state.auth.error);\n  const [regComplete, setRegComplete] = useState(false);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6);\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim().length >= 6);\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n  let validationError = false;\n  if (emailInputHasError || passwordInputHasError) {\n    validationError = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\"/keysee/api/v1/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword\n          // returnSecureToken: true,\n        }),\n\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"This email already exists\");\n      }\n      const data = await response.json();\n      setRegComplete(true);\n      setTimeout(() => {\n        setRegComplete(false);\n        dispatch(authActions.logIn(data.access_token));\n      }, 2000);\n    };\n    sendRequest().catch(err => {\n      dispatch(authActions.showError(err.message));\n    });\n    document.activeElement.blur();\n    resetEmailInput();\n    resetPasswordInput();\n  };\n  const signInHandler = () => {\n    history.replace(\"/login\");\n    dispatch(authActions.removeError());\n  };\n  const emailInputClasses = emailInputHasError || isError ? `formInput wrongCredentials` : `formInput`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: classes.loginForm,\n      children: [!regComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.newUser,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: signInHandler,\n            children: \"Sign in.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: emailInputClasses,\n            value: enteredEmail,\n            onChange: emailChangedHandler,\n            onBlur: emailBlurHandler,\n            onFocus: emailFocusHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            enteredPassword: enteredPassword,\n            passwordInputHasError: passwordInputHasError,\n            enteredPasswordIsValid: enteredPasswordIsValid,\n            passwordChangedHandler: passwordChangedHandler,\n            passwordBlurHandler: passwordBlurHandler,\n            resetPasswordInput: resetPasswordInput,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), validationError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errorText,\n          children: \"Please enter correct email & password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errorText,\n          children: isError.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n          title: \"Sign Up\",\n          type: \"submit\",\n          disabled: !formIsValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), regComplete && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.sucessReg,\n        children: [\"Congratulations!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), \"You have successfully registered!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoMain,\n      alt: \"keysee\",\n      className: classes.mainLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"MAmJklTmObBWGXoWXCGAkqpOQMU=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useInput, useInput];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","classes","logoMain","useInput","useHistory","useDispatch","useSelector","authActions","MainButton","PasswordInput","LoginForm","history","dispatch","isError","state","auth","error","regComplete","setRegComplete","value","enteredEmail","hasError","emailInputHasError","isValid","enteredEmailIsValid","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","inputFocusHandler","emailFocusHandler","reset","resetEmailInput","includes","trim","length","enteredPassword","passwordInputHasError","enteredPasswordIsValid","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","formIsValid","validationError","submitHandler","event","preventDefault","sendRequest","response","fetch","method","body","JSON","stringify","email","password","headers","ok","Error","data","json","setTimeout","logIn","access_token","catch","err","showError","message","document","activeElement","blur","signInHandler","replace","removeError","emailInputClasses","container","loginForm","newUser","errorText","errorMessage","sucessReg","mainLogo"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Login/RegisterForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\nimport MainButton from \"../Reusable/MainButton\";\nimport PasswordInput from \"../Reusable/PasswordInput\";\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isError = useSelector((state) => state.auth.error);\n  const [regComplete, setRegComplete] = useState(false);\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput,\n  } = useInput(\n    (value) =>\n      value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6\n  );\n\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim().length >= 6);\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  let validationError = false;\n  if (emailInputHasError || passwordInputHasError) {\n    validationError = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const sendRequest = async () => {\n      const response = await fetch(\"/keysee/api/v1/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          // returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"This email already exists\");\n      }\n\n      const data = await response.json();\n      setRegComplete(true);\n      setTimeout(() => {\n        setRegComplete(false);\n        dispatch(authActions.logIn(data.access_token));\n      }, 2000);\n    };\n\n    sendRequest().catch((err) => {\n      dispatch(authActions.showError(err.message));\n    });\n\n    document.activeElement.blur();\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const signInHandler = () => {\n    history.replace(\"/login\");\n    dispatch(authActions.removeError());\n  };\n\n  const emailInputClasses =\n    emailInputHasError || isError ? `formInput wrongCredentials` : `formInput`;\n\n  return (\n    <div className={classes.container}>\n      <form onSubmit={submitHandler} className={classes.loginForm}>\n        {!regComplete && (\n          <>\n            <h1>Sign Up</h1>\n            <div className={classes.newUser}>\n              <p>Have an account?</p>\n              <span onClick={signInHandler}>Sign in.</span>\n            </div>\n            <div className=\"inputsContainer\">\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                className={emailInputClasses}\n                value={enteredEmail}\n                onChange={emailChangedHandler}\n                onBlur={emailBlurHandler}\n                onFocus={emailFocusHandler}\n              ></input>\n              <PasswordInput\n                enteredPassword={enteredPassword}\n                passwordInputHasError={passwordInputHasError}\n                enteredPasswordIsValid={enteredPasswordIsValid}\n                passwordChangedHandler={passwordChangedHandler}\n                passwordBlurHandler={passwordBlurHandler}\n                resetPasswordInput={resetPasswordInput}\n                placeholder=\"Password\"\n              />\n            </div>\n            {validationError && (\n              <p className={classes.errorText}>\n                Please enter correct email & password.\n              </p>\n            )}\n            {isError && (\n              <p className={classes.errorText}>{isError.errorMessage}</p>\n            )}\n            <MainButton title=\"Sign Up\" type=\"submit\" disabled={!formIsValid} />\n          </>\n        )}\n        {regComplete && (\n          <span className={classes.sucessReg}>\n            Congratulations!\n            <br />\n            You have successfully registered!\n          </span>\n        )}\n      </form>\n      <img src={logoMain} alt=\"keysee\" className={classes.mainLogo} />\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}