{"ast":null,"code":"import { keysAction } from \"./keys\";\nexport const sendKeysData = keys => {\n  return async dispatch => {\n    const sendRequest = async () => {\n      const response = await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          keyList: keys.keyList,\n          quantity: keys.quantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n    };\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const fetchKeysData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\");\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data.\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const keysData = await fetchData();\n      dispatch(keysAction.replaceKeys({\n        keyList: keysData.keyList || [],\n        quantity: keysData.quantity\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"names":["keysAction","sendKeysData","keys","dispatch","sendRequest","response","fetch","method","body","JSON","stringify","keyList","quantity","ok","Error","error","console","log","message","fetchKeysData","fetchData","data","json","keysData","replaceKeys"],"sources":["/Users/dmitrykoptev/Desktop/keysee/src/store/keys-actions.js"],"sourcesContent":["import { keysAction } from \"./keys\";\n\nexport const sendKeysData = (keys) => {\n  return async (dispatch) => {\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://keysee-default-rtdb.firebaseio.com/keys.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            keyList: keys.keyList,\n            quantity: keys.quantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\nexport const fetchKeysData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://keysee-default-rtdb.firebaseio.com/keys.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data.\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const keysData = await fetchData();\n\n      dispatch(\n        keysAction.replaceKeys({\n          keyList: keysData.keyList || [],\n          quantity: keysData.quantity,\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AAEnC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,WAAW,GAAG,YAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sDAAsD,EACtD;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAET,IAAI,CAACS,OAAO;UACrBC,QAAQ,EAAEV,IAAI,CAACU;QACjB,CAAC;MACH,CAAC,CACF;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IAED,IAAI;MACF,MAAMV,WAAW,EAAE;IACrB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOhB,QAAQ,IAAK;IACzB,MAAMiB,SAAS,GAAG,YAAY;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sDAAsD,CACvD;MAED,IAAI,CAACD,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMO,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,EAAE;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMH,SAAS,EAAE;MAElCjB,QAAQ,CACNH,UAAU,CAACwB,WAAW,CAAC;QACrBb,OAAO,EAAEY,QAAQ,CAACZ,OAAO,IAAI,EAAE;QAC/BC,QAAQ,EAAEW,QAAQ,CAACX;MACrB,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}