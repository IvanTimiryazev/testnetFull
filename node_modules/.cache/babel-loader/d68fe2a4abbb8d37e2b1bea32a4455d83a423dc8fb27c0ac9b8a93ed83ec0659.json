{"ast":null,"code":"import { accountsActions } from \"./accounts\";\nimport { notificationActions } from \"./notification\";\nexport const sendAccountsData = accountsList => {\n  return async dispatch => {\n    dispatch(notificationActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending account data!\"\n    }));\n    const sendRequest = async () => {\n      await fetch(\"https://keysee-default-rtdb.firebaseio.com/accounts.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          quantity: accountsList.quantity,\n          items: accountsList.items\n        })\n      });\n    };\n    try {\n      await sendRequest();\n      dispatch(notificationActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent account data successfully!\"\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending account data failed!\"\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\nexport const fetchAccountsData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://keysee-default-rtdb.firebaseio.com/accounts.json\");\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const accountsListData = await fetchData();\n      dispatch(accountsActions.replaceAccounts({\n        quantity: accountsListData.quantity,\n        items: accountsListData.items || []\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["accountsActions","notificationActions","sendAccountsData","accountsList","dispatch","showNotification","status","title","message","sendRequest","fetch","method","body","JSON","stringify","quantity","items","setTimeout","hideNotification","error","fetchAccountsData","fetchData","response","data","json","accountsListData","replaceAccounts"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/store/accounts-actions.js"],"sourcesContent":["import { accountsActions } from \"./accounts\";\nimport { notificationActions } from \"./notification\";\n\nexport const sendAccountsData = (accountsList) => {\n  return async (dispatch) => {\n    dispatch(\n      notificationActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending account data!\",\n      })\n    );\n    const sendRequest = async () => {\n      await fetch(\"https://keysee-default-rtdb.firebaseio.com/accounts.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          quantity: accountsList.quantity,\n          items: accountsList.items,\n        }),\n      });\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        notificationActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent account data successfully!\",\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending account data failed!\",\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\n\nexport const fetchAccountsData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://keysee-default-rtdb.firebaseio.com/accounts.json\"\n      );\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const accountsListData = await fetchData();\n\n      dispatch(\n        accountsActions.replaceAccounts({\n          quantity: accountsListData.quantity,\n          items: accountsListData.items || [],\n        })\n      );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching data failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,YAAY;AAC5C,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,OAAO,MAAMC,gBAAgB,GAAIC,YAAY,IAAK;EAChD,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;MACnCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,MAAMC,WAAW,GAAG,YAAY;MAC9B,MAAMC,KAAK,CAAC,0DAA0D,EAAE;QACtEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAEZ,YAAY,CAACY,QAAQ;UAC/BC,KAAK,EAAEb,YAAY,CAACa;QACtB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;MACF,MAAMP,WAAW,EAAE;MACnBL,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACDS,UAAU,CAAC,MAAM;QACfb,QAAQ,CAACH,mBAAmB,CAACiB,gBAAgB,EAAE,CAAC;MAClD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACDS,UAAU,CAAC,MAAM;QACfb,QAAQ,CAACH,mBAAmB,CAACiB,gBAAgB,EAAE,CAAC;MAClD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAM;EACrC,OAAO,MAAOhB,QAAQ,IAAK;IACzB,MAAMiB,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAC1B,0DAA0D,CAC3D;MAED,MAAMa,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,gBAAgB,GAAG,MAAMJ,SAAS,EAAE;MAE1CjB,QAAQ,CACNJ,eAAe,CAAC0B,eAAe,CAAC;QAC9BX,QAAQ,EAAEU,gBAAgB,CAACV,QAAQ;QACnCC,KAAK,EAAES,gBAAgB,CAACT,KAAK,IAAI;MACnC,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdf,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}