{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst accountsInitialState = {\n  accountsList: [],\n  quantity: 0,\n  changed: false\n};\nconst accountsSlice = createSlice({\n  name: \"accountsList\",\n  initialState: accountsInitialState,\n  reducers: {\n    replaceAccounts(state, payload) {\n      state.accountsList = action.payload.accountsList;\n      state.quantity = action.payload.quantity;\n    },\n    addAccount(state, action) {\n      const newAccount = action.payload;\n      state.accountsList = [...state.accountsList, {\n        id: newAccount.id,\n        handle: newAccount.handle,\n        url: `https://twitter.com/${newAccount.handle}`\n      }];\n      state.quantity++;\n      state.changed = true;\n    },\n    removeAccount(state, action) {\n      const id = action.payload;\n      state.accountsList.filter(account => account.id !== id);\n      state.quantity--;\n      state.changed = true;\n    }\n  }\n});\nexport default accountsSlice.reducer;","map":{"version":3,"names":["createSlice","accountsInitialState","accountsList","quantity","changed","accountsSlice","name","initialState","reducers","replaceAccounts","state","payload","action","addAccount","newAccount","id","handle","url","removeAccount","filter","account","reducer"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/store/accounts.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst accountsInitialState = {\n  accountsList: [],\n  quantity: 0,\n  changed: false,\n};\n\nconst accountsSlice = createSlice({\n  name: \"accountsList\",\n  initialState: accountsInitialState,\n  reducers: {\n    replaceAccounts(state, payload) {\n      state.accountsList = action.payload.accountsList;\n      state.quantity = action.payload.quantity;\n    },\n    addAccount(state, action) {\n      const newAccount = action.payload;\n      state.accountsList = [\n        ...state.accountsList,\n        {\n          id: newAccount.id,\n          handle: newAccount.handle,\n          url: `https://twitter.com/${newAccount.handle}`,\n        },\n      ];\n      state.quantity++;\n      state.changed = true;\n    },\n    removeAccount(state, action) {\n      const id = action.payload;\n      state.accountsList.filter((account) => account.id !== id);\n      state.quantity--;\n      state.changed = true;\n    },\n  },\n});\n\nexport default accountsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAG;EAC3BC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC;EACXC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAEN,oBAAoB;EAClCO,QAAQ,EAAE;IACRC,eAAe,CAACC,KAAK,EAAEC,OAAO,EAAE;MAC9BD,KAAK,CAACR,YAAY,GAAGU,MAAM,CAACD,OAAO,CAACT,YAAY;MAChDQ,KAAK,CAACP,QAAQ,GAAGS,MAAM,CAACD,OAAO,CAACR,QAAQ;IAC1C,CAAC;IACDU,UAAU,CAACH,KAAK,EAAEE,MAAM,EAAE;MACxB,MAAME,UAAU,GAAGF,MAAM,CAACD,OAAO;MACjCD,KAAK,CAACR,YAAY,GAAG,CACnB,GAAGQ,KAAK,CAACR,YAAY,EACrB;QACEa,EAAE,EAAED,UAAU,CAACC,EAAE;QACjBC,MAAM,EAAEF,UAAU,CAACE,MAAM;QACzBC,GAAG,EAAG,uBAAsBH,UAAU,CAACE,MAAO;MAChD,CAAC,CACF;MACDN,KAAK,CAACP,QAAQ,EAAE;MAChBO,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB,CAAC;IACDc,aAAa,CAACR,KAAK,EAAEE,MAAM,EAAE;MAC3B,MAAMG,EAAE,GAAGH,MAAM,CAACD,OAAO;MACzBD,KAAK,CAACR,YAAY,CAACiB,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACL,EAAE,KAAKA,EAAE,CAAC;MACzDL,KAAK,CAACP,QAAQ,EAAE;MAChBO,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}