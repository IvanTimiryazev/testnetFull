{"ast":null,"code":"import { keysAction } from \"./keys\";\nimport { notificationActions } from \"./notification\";\nexport const sendKeysData = keyList => {\n  return async dispatch => {\n    // dispatch(\n    //   notificationActions.showNotification({\n    //     status: \"pending\",\n    //     message: \"Sending key data\",\n    //   })\n    // );\n    const sendRequest = async () => {\n      await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          quantity: keyList.quantity,\n          items: keyList.items\n        })\n      });\n    };\n    try {\n      await sendRequest();\n      // dispatch(\n      //   notificationActions.showNotification({\n      //     status: \"success\",\n      //     title: \"Success!\",\n      //     message: \"Sent key data successfully!\",\n      //   })\n      // );\n      // setTimeout(() => {\n      //   dispatch(notificationActions.hideNotification());\n      // }, 1500);\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        message: \"Applying key failed!\"\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\nexport const fetchKeysData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\");\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const keyListData = await fetchData();\n      dispatch(keysAction.replaceKeyList({\n        items: keyListData.items || [],\n        quantity: keyListData.quantity\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching keys failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["keysAction","notificationActions","sendKeysData","keyList","dispatch","sendRequest","fetch","method","body","JSON","stringify","quantity","items","error","showNotification","status","message","setTimeout","hideNotification","fetchKeysData","fetchData","response","data","json","keyListData","replaceKeyList","title"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/store/keys-actions.js"],"sourcesContent":["import { keysAction } from \"./keys\";\nimport { notificationActions } from \"./notification\";\n\nexport const sendKeysData = (keyList) => {\n  return async (dispatch) => {\n    // dispatch(\n    //   notificationActions.showNotification({\n    //     status: \"pending\",\n    //     message: \"Sending key data\",\n    //   })\n    // );\n    const sendRequest = async () => {\n      await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          quantity: keyList.quantity,\n          items: keyList.items,\n        }),\n      });\n    };\n\n    try {\n      await sendRequest();\n      // dispatch(\n      //   notificationActions.showNotification({\n      //     status: \"success\",\n      //     title: \"Success!\",\n      //     message: \"Sent key data successfully!\",\n      //   })\n      // );\n      // setTimeout(() => {\n      //   dispatch(notificationActions.hideNotification());\n      // }, 1500);\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          message: \"Applying key failed!\",\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\n\nexport const fetchKeysData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://keysee-default-rtdb.firebaseio.com/keys.json\"\n      );\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const keyListData = await fetchData();\n\n      dispatch(\n        keysAction.replaceKeyList({\n          items: keyListData.items || [],\n          quantity: keyListData.quantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching keys failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AACnC,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK;EACvC,OAAO,MAAOC,QAAQ,IAAK;IACzB;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,WAAW,GAAG,YAAY;MAC9B,MAAMC,KAAK,CAAC,sDAAsD,EAAE;QAClEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAER,OAAO,CAACQ,QAAQ;UAC1BC,KAAK,EAAET,OAAO,CAACS;QACjB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;MACF,MAAMP,WAAW,EAAE;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdT,QAAQ,CACNH,mBAAmB,CAACa,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACDC,UAAU,CAAC,MAAM;QACfb,QAAQ,CAACH,mBAAmB,CAACiB,gBAAgB,EAAE,CAAC;MAClD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOf,QAAQ,IAAK;IACzB,MAAMgB,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAC1B,sDAAsD,CACvD;MAED,MAAMgB,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,WAAW,GAAG,MAAMJ,SAAS,EAAE;MAErChB,QAAQ,CACNJ,UAAU,CAACyB,cAAc,CAAC;QACxBb,KAAK,EAAEY,WAAW,CAACZ,KAAK,IAAI,EAAE;QAC9BD,QAAQ,EAAEa,WAAW,CAACb;MACxB,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,QAAQ,CACNH,mBAAmB,CAACa,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfW,KAAK,EAAE,QAAQ;QACfV,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}