{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dmitrykoptev/Documents/GitHub/keysee/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/dmitrykoptev/Documents/GitHub/keysee/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/dmitrykoptev/Documents/GitHub/keysee/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import classes from\"../Login/AuthForm.module.css\";import useInput from\"../../hooks/use-input\";import logoMain from\"../../images/LogoMain.png\";import MainButton from\"../Reusable/MainButton\";import PasswordInput from\"../Reusable/PasswordInput\";import{useHistory}from\"react-router-dom\";import{notificationActions}from\"../../store/notification\";import{useDispatch,useSelector}from\"react-redux\";import Notification from\"../Notification/Notification\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ResetPassword=function ResetPassword(){var dispatch=useDispatch();var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),passwordReset=_useState2[0],setPasswordReset=_useState2[1];var notification=useSelector(function(state){return state.notification.notification;});var showNotification=useSelector(function(state){return state.notification.showNotification;});var _useInput=useInput(function(value){return value.trim().length>=6;}),enteredPassword=_useInput.value,passwordInputHasError=_useInput.hasError,enteredPasswordIsValid=_useInput.isValid,passwordChangedHandler=_useInput.valueChangeHandler,passwordBlurHandler=_useInput.inputBlurHandler,resetPasswordInput=_useInput.reset;var _useInput2=useInput(function(value){return value.trim().length>=6;}),enteredPasswordRepeat=_useInput2.value,passwordInputHasErrorRepeat=_useInput2.hasError,enteredPasswordIsValidRepeat=_useInput2.isValid,passwordChangedHandlerRepeat=_useInput2.valueChangeHandler,passwordBlurHandlerRepeat=_useInput2.inputBlurHandler,resetPasswordInputRepeat=_useInput2.reset;var validationError=false;if(passwordInputHasError||passwordInputHasErrorRepeat){validationError=true;}var formIsValid=false;if(enteredPasswordIsValid&&enteredPassword===enteredPasswordRepeat){formIsValid=true;}var submitHandler=function submitHandler(event){event.preventDefault();var sendRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\",{method:\"POST\",body:JSON.stringify({//\n// ЧТО НУЖНО ОТПРАВЛЯТЬ, ЧТОБЫ ИЗМЕНИЛСЯ ПАРОЛЬ У КОНКРЕТНОГО ЮЗЕРА?\n//\npassword:enteredPassword,returnSecureToken:true}),headers:{\"Content-Type\":\"application/json\"}});case 2:response=_context.sent;if(response.ok){_context.next=5;break;}throw new Error(\"Something went wrong...\");case 5:setPasswordReset(true);setTimeout(function(){history.replace(\"./login\");},4000);case 7:case\"end\":return _context.stop();}}},_callee);}));return function sendRequest(){return _ref.apply(this,arguments);};}();sendRequest().catch(function(err){dispatch(notificationActions.showNotification({status:\"error\",message:err.message}));setTimeout(function(){dispatch(notificationActions.hideNotification());},2500);setTimeout(function(){dispatch(notificationActions.resetNotification());},4000);});};var goToLoginHandler=function goToLoginHandler(){history.replace(\"/login\");};return/*#__PURE__*/_jsxs(\"div\",{className:classes.container,children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,className:classes.loginForm,children:[!passwordReset&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Reset password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputsContainer\",children:[/*#__PURE__*/_jsx(PasswordInput,{enteredPassword:enteredPassword,passwordInputHasError:passwordInputHasError,enteredPasswordIsValid:enteredPasswordIsValid,passwordChangedHandler:passwordChangedHandler,passwordBlurHandler:passwordBlurHandler,resetPasswordInput:resetPasswordInput,placeholder:\"New password\"}),/*#__PURE__*/_jsx(PasswordInput,{enteredPassword:enteredPasswordRepeat,passwordInputHasError:passwordInputHasErrorRepeat,enteredPasswordIsValid:enteredPasswordIsValidRepeat,passwordChangedHandler:passwordChangedHandlerRepeat,passwordBlurHandler:passwordBlurHandlerRepeat,resetPasswordInput:resetPasswordInputRepeat,placeholder:\"Old password\"})]}),validationError&&/*#__PURE__*/_jsx(\"span\",{className:classes.errorText,children:\"Password can't be less then 6 symbols.\"}),/*#__PURE__*/_jsx(MainButton,{title:\"Confirm\",type:\"submit\",disabled:!formIsValid})]}),passwordReset&&/*#__PURE__*/_jsx(\"span\",{className:classes.sucessReg,children:\"Your password has been reset successfully!\"})]}),/*#__PURE__*/_jsx(\"img\",{src:logoMain,alt:\"keysee\",className:classes.mainLogo,onClick:goToLoginHandler}),/*#__PURE__*/_jsx(Notification,{show:showNotification,status:notification.status,message:notification.message})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","classes","useInput","logoMain","MainButton","PasswordInput","useHistory","notificationActions","useDispatch","useSelector","Notification","ResetPassword","dispatch","history","passwordReset","setPasswordReset","notification","state","showNotification","value","trim","length","enteredPassword","passwordInputHasError","hasError","enteredPasswordIsValid","isValid","passwordChangedHandler","valueChangeHandler","passwordBlurHandler","inputBlurHandler","resetPasswordInput","reset","enteredPasswordRepeat","passwordInputHasErrorRepeat","enteredPasswordIsValidRepeat","passwordChangedHandlerRepeat","passwordBlurHandlerRepeat","resetPasswordInputRepeat","validationError","formIsValid","submitHandler","event","preventDefault","sendRequest","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","response","ok","Error","setTimeout","replace","catch","err","status","message","hideNotification","resetNotification","goToLoginHandler","container","loginForm","errorText","sucessReg","mainLogo"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/ResetPassword/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport classes from \"../Login/AuthForm.module.css\";\nimport useInput from \"../../hooks/use-input\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport MainButton from \"../Reusable/MainButton\";\nimport PasswordInput from \"../Reusable/PasswordInput\";\nimport { useHistory } from \"react-router-dom\";\nimport { notificationActions } from \"../../store/notification\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notification from \"../Notification/Notification\";\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [passwordReset, setPasswordReset] = useState(false);\n  const notification = useSelector((state) => state.notification.notification);\n  const showNotification = useSelector(\n    (state) => state.notification.showNotification\n  );\n\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim().length >= 6);\n\n  const {\n    value: enteredPasswordRepeat,\n    hasError: passwordInputHasErrorRepeat,\n    isValid: enteredPasswordIsValidRepeat,\n    valueChangeHandler: passwordChangedHandlerRepeat,\n    inputBlurHandler: passwordBlurHandlerRepeat,\n    reset: resetPasswordInputRepeat,\n  } = useInput((value) => value.trim().length >= 6);\n\n  let validationError = false;\n  if (passwordInputHasError || passwordInputHasErrorRepeat) {\n    validationError = true;\n  }\n\n  let formIsValid = false;\n  if (enteredPasswordIsValid && enteredPassword === enteredPasswordRepeat) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            //\n            // ЧТО НУЖНО ОТПРАВЛЯТЬ, ЧТОБЫ ИЗМЕНИЛСЯ ПАРОЛЬ У КОНКРЕТНОГО ЮЗЕРА?\n            //\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      }\n\n      setPasswordReset(true);\n      setTimeout(() => {\n        history.replace(\"./login\");\n      }, 4000);\n    };\n\n    sendRequest().catch((err) => {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          message: err.message,\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 2500);\n      setTimeout(() => {\n        dispatch(notificationActions.resetNotification());\n      }, 4000);\n    });\n  };\n\n  const goToLoginHandler = () => {\n    history.replace(\"/login\");\n  };\n\n  return (\n    <div className={classes.container}>\n      <form onSubmit={submitHandler} className={classes.loginForm}>\n        {!passwordReset && (\n          <>\n            <h1>Reset password</h1>\n            <div className=\"inputsContainer\">\n              <PasswordInput\n                enteredPassword={enteredPassword}\n                passwordInputHasError={passwordInputHasError}\n                enteredPasswordIsValid={enteredPasswordIsValid}\n                passwordChangedHandler={passwordChangedHandler}\n                passwordBlurHandler={passwordBlurHandler}\n                resetPasswordInput={resetPasswordInput}\n                placeholder=\"New password\"\n              />\n              <PasswordInput\n                enteredPassword={enteredPasswordRepeat}\n                passwordInputHasError={passwordInputHasErrorRepeat}\n                enteredPasswordIsValid={enteredPasswordIsValidRepeat}\n                passwordChangedHandler={passwordChangedHandlerRepeat}\n                passwordBlurHandler={passwordBlurHandlerRepeat}\n                resetPasswordInput={resetPasswordInputRepeat}\n                placeholder=\"Old password\"\n              />\n            </div>\n            {validationError && (\n              <span className={classes.errorText}>\n                Password can't be less then 6 symbols.\n              </span>\n            )}\n            <MainButton title=\"Confirm\" type=\"submit\" disabled={!formIsValid} />\n          </>\n        )}\n        {passwordReset && (\n          <span className={classes.sucessReg}>\n            Your password has been reset successfully!\n          </span>\n        )}\n      </form>\n      <img\n        src={logoMain}\n        alt=\"keysee\"\n        className={classes.mainLogo}\n        onClick={goToLoginHandler}\n      />\n\n      <Notification\n        show={showNotification}\n        status={notification.status}\n        message={notification.message}\n      />\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}