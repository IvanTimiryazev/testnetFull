{"ast":null,"code":"import { keysAction } from \"./keys\";\nimport { notificationActions } from \"./notification\";\nexport const sendKeysData = keys => {\n  return async dispatch => {\n    dispatch(notificationActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          keyList: keys.keyList\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(notificationActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};\nexport const fetchKeysData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://keysee-default-rtdb.firebaseio.com/keys.json\");\n      if (!response.ok) {\n        throw new Error(\"Could not fetch keys data.\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const keysData = await fetchData();\n      dispatch(keysAction.replaceKeys({\n        keyList: keysData.keyList || []\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["keysAction","notificationActions","sendKeysData","keys","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","keyList","ok","Error","error","fetchKeysData","fetchData","data","json","keysData","replaceKeys"],"sources":["/Users/dmitrykoptev/Desktop/keysee/src/store/keys-actions.js"],"sourcesContent":["import { keysAction } from \"./keys\";\nimport { notificationActions } from \"./notification\";\n\nexport const sendKeysData = (keys) => {\n  return async (dispatch) => {\n    dispatch(\n      notificationActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://keysee-default-rtdb.firebaseio.com/keys.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            keyList: keys.keyList,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        notificationActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const fetchKeysData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://keysee-default-rtdb.firebaseio.com/keys.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch keys data.\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const keysData = await fetchData();\n\n      dispatch(\n        keysAction.replaceKeys({\n          keyList: keysData.keyList || [],\n        })\n      );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AACnC,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;MACnCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,MAAMC,WAAW,GAAG,YAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sDAAsD,EACtD;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEb,IAAI,CAACa;QAChB,CAAC;MACH,CAAC,CACF;MAED,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IAED,IAAI;MACF,MAAMT,WAAW,EAAE;MAEnBL,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdf,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOhB,QAAQ,IAAK;IACzB,MAAMiB,SAAS,GAAG,YAAY;MAC5B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sDAAsD,CACvD;MAED,IAAI,CAACD,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMI,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMH,SAAS,EAAE;MAElCjB,QAAQ,CACNJ,UAAU,CAACyB,WAAW,CAAC;QACrBT,OAAO,EAAEQ,QAAQ,CAACR,OAAO,IAAI;MAC/B,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdf,QAAQ,CACNH,mBAAmB,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}