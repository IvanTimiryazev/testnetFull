{"ast":null,"code":"import { accountsActions } from \"./accounts\";\nimport { notificationActions } from \"./notification\";\nexport const fetchAccountsData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"/api/v1/accounts\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const accountsList = await fetchData();\n      dispatch(accountsActions.replaceAccounts({\n        quantity: accountsList.length,\n        items: accountsList || []\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        message: \"Fetching accounts failed!\"\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\nexport const addAccount = async function (accountName) {\n  return async dispatch => {\n    const sendRequest = async function () {\n      const response = await fetch(\"/api/v1/accounts\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          account: accountName\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n      console.log(response);\n      fetchAccountsData();\n    };\n    try {\n      await sendRequest();\n    } catch (err) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        message: err.message\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 2500);\n      setTimeout(() => {\n        dispatch(notificationActions.resetNotification());\n      }, 4000);\n    }\n  };\n};\nexport const deleteAccount = async function (id) {\n  const sendRequest = async function () {\n    const response = await fetch(\"/api/v1/accounts\", {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        id: id\n      }),\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Something went wrong ...\");\n    }\n    fetchAccountsData();\n  };\n  try {\n    await sendRequest();\n  } catch (err) {\n    // диспатчить ошибку из стейта\n    console.log(err.message);\n  }\n};","map":{"version":3,"names":["accountsActions","notificationActions","fetchAccountsData","dispatch","fetchData","response","fetch","method","headers","Authorization","localStorage","getItem","data","json","accountsList","replaceAccounts","quantity","length","items","error","showNotification","status","message","setTimeout","hideNotification","addAccount","accountName","sendRequest","body","JSON","stringify","account","ok","Error","console","log","err","resetNotification","deleteAccount","id"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/store/accounts-actions.js"],"sourcesContent":["import { accountsActions } from \"./accounts\";\nimport { notificationActions } from \"./notification\";\n\nexport const fetchAccountsData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\"/api/v1/accounts\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const accountsList = await fetchData();\n      dispatch(\n        accountsActions.replaceAccounts({\n          quantity: accountsList.length,\n          items: accountsList || [],\n        })\n      );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          message: \"Fetching accounts failed!\",\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\n\nexport const addAccount = async function (accountName) {\n  return async (dispatch) => {\n    const sendRequest = async function () {\n      const response = await fetch(\"/api/v1/accounts\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          account: accountName,\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n\n      console.log(response);\n      fetchAccountsData();\n    };\n\n    try {\n      await sendRequest();\n    } catch (err) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          message: err.message,\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 2500);\n      setTimeout(() => {\n        dispatch(notificationActions.resetNotification());\n      }, 4000);\n    }\n  };\n};\n\nexport const deleteAccount = async function (id) {\n  const sendRequest = async function () {\n    const response = await fetch(\"/api/v1/accounts\", {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        id: id,\n      }),\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Something went wrong ...\");\n    }\n\n    fetchAccountsData();\n  };\n\n  try {\n    await sendRequest();\n  } catch (err) {\n    // диспатчить ошибку из стейта\n    console.log(err.message);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}