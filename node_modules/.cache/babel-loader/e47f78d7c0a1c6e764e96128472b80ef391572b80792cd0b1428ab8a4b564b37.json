{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { accountsActions } from \"./accounts\";\nimport { notificationActions } from \"./notification\";\nexport const sendAccountsData = accountsList => {\n  return async dispatch => {\n    const sendRequest = async () => {\n      await fetch(\"https://keysee-521c4-default-rtdb.firebaseio.com/accounts.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          quantity: accountsList.quantity,\n          items: accountsList.items\n        })\n      });\n    };\n    try {\n      await sendRequest();\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        message: \"Applying account failed!\"\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\nexport const fetchAccountsData = () => {\n  _s();\n  const jwt = useSelector(state => state.auth.token);\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"/api/v1/accounts\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      return data;\n    };\n    try {\n      await fetchData();\n\n      // dispatch(\n      //   accountsActions.replaceAccounts({\n      //     quantity: accountsListData.quantity,\n      //     items: accountsListData.items || [],\n      //   })\n      // );\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: \"error\",\n        message: \"Fetching accounts failed!\"\n      }));\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\n_s(fetchAccountsData, \"03Fg2cWZkLCIr4pfbbMxJiLO//Q=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useSelector","accountsActions","notificationActions","sendAccountsData","accountsList","dispatch","sendRequest","fetch","method","body","JSON","stringify","quantity","items","error","showNotification","status","message","setTimeout","hideNotification","fetchAccountsData","jwt","state","auth","token","fetchData","response","headers","Authorization","data","json","console","log"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/store/accounts-actions.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { accountsActions } from \"./accounts\";\nimport { notificationActions } from \"./notification\";\n\nexport const sendAccountsData = (accountsList) => {\n  return async (dispatch) => {\n    const sendRequest = async () => {\n      await fetch(\n        \"https://keysee-521c4-default-rtdb.firebaseio.com/accounts.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            quantity: accountsList.quantity,\n            items: accountsList.items,\n          }),\n        }\n      );\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          message: \"Applying account failed!\",\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\n\nexport const fetchAccountsData = () => {\n  const jwt = useSelector((state) => state.auth.token);\n\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\"/api/v1/accounts\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${jwt}`,\n        },\n      });\n\n      const data = await response.json();\n\n      console.log(data);\n      return data;\n    };\n\n    try {\n      await fetchData();\n\n      // dispatch(\n      //   accountsActions.replaceAccounts({\n      //     quantity: accountsListData.quantity,\n      //     items: accountsListData.items || [],\n      //   })\n      // );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          message: \"Fetching accounts failed!\",\n        })\n      );\n      setTimeout(() => {\n        dispatch(notificationActions.hideNotification());\n      }, 1500);\n    }\n  };\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,YAAY;AAC5C,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,OAAO,MAAMC,gBAAgB,GAAIC,YAAY,IAAK;EAChD,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,WAAW,GAAG,YAAY;MAC9B,MAAMC,KAAK,CACT,gEAAgE,EAChE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAER,YAAY,CAACQ,QAAQ;UAC/BC,KAAK,EAAET,YAAY,CAACS;QACtB,CAAC;MACH,CAAC,CACF;IACH,CAAC;IAED,IAAI;MACF,MAAMP,WAAW,EAAE;IACrB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdT,QAAQ,CACNH,mBAAmB,CAACa,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACDC,UAAU,CAAC,MAAM;QACfb,QAAQ,CAACH,mBAAmB,CAACiB,gBAAgB,EAAE,CAAC;MAClD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EACrC,MAAMC,GAAG,GAAGrB,WAAW,CAAEsB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;EAEpD,OAAO,MAAOnB,QAAQ,IAAK;IACzB,MAAMoB,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAAC,kBAAkB,EAAE;QAC/CC,MAAM,EAAE,KAAK;QACbmB,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,GAAI;QAC/B;MACF,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAElCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,OAAOA,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAMJ,SAAS,EAAE;;MAEjB;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdT,QAAQ,CACNH,mBAAmB,CAACa,gBAAgB,CAAC;QACnCC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACDC,UAAU,CAAC,MAAM;QACfb,QAAQ,CAACH,mBAAmB,CAACiB,gBAAgB,EAAE,CAAC;MAClD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;AACH,CAAC;AAAC,GAvCWC,iBAAiB;EAAA,QAChBpB,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}