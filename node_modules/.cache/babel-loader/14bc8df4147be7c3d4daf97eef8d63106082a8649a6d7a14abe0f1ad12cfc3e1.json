{"ast":null,"code":"var _jsxFileName = \"/Users/ivylou/Desktop/pythonProject/keysee/src/components/Header/MenuModals/CnahgeEmailModal.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useInput from \"../../../hooks/use-input\";\nimport { modalActions } from \"../../../store/modals\";\nimport { callNotification } from \"../../../store/notification-actions\";\nimport MainButton from \"../../Reusable/MainButton\";\nimport Modal from \"../../Reusable/Modal\";\nimport EmailInput from \"../../Reusable/PasswordInput\";\nimport classes from \"./ChangePasswordModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangeEmailModal = props => {\n  _s();\n  const dispatch = useDispatch();\n  let {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6);\n  let {\n    value: enteredEmailRepeat,\n    hasError: emailInputHasErrorRepeat,\n    isValid: enteredEmailIsValidRepeat,\n    valueChangeHandler: emailChangedHandlerRepeat,\n    inputBlurHandler: emailBlurHandlerRepeat,\n    reset: resetEmailInputRepeat\n  } = useInput(value => value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6);\n  const resetForm = () => {\n    resetEmailInput();\n    resetEmailInputRepeat();\n  };\n  let validationError;\n  if (emailInputHasError || emailInputHasErrorRepeat) {\n    validationError = true;\n  }\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredEmail === enteredEmailRepeat) {\n    formIsValid = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\"api/v1/edit_profile\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          email: enteredEmail\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      document.activeElement.blur();\n      resetEmailInput();\n      resetEmailInputRepeat();\n      if (!response.ok) {\n        throw new Error(\"Something went wrong. Please try again.\");\n      }\n      dispatch(modalActions.closeModal());\n      dispatch(callNotification(\"success\", \"Your email has been changed successfully!\"));\n    };\n    try {\n      sendRequest();\n    } catch (err) {\n      dispatch(callNotification(\"error\", err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    modalType: \"changeEmail\",\n    reset: resetForm,\n    show: props.show,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.title,\n        children: \"Change email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n            inputType: \"email\",\n            enteredEmail: enteredEmail,\n            emailInputHasError: emailInputHasError,\n            enteredEmailIsValid: enteredEmailIsValid,\n            emailChangedHandler: emailChangedHandler,\n            emailBlurHandler: emailBlurHandler,\n            resetEmailInput: resetEmailInput,\n            placeholder: \"New email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailInput, {\n            inputType: \"email\",\n            enteredEmail: enteredEmailRepeat,\n            emailInputHasError: emailInputHasErrorRepeat,\n            enteredEmailIsValid: enteredEmailIsValidRepeat,\n            emailChangedHandler: emailChangedHandlerRepeat,\n            emailBlurHandler: emailBlurHandlerRepeat,\n            resetEmailInput: resetEmailInputRepeat,\n            placeholder: \"Repeat email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), validationError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: \"Enter correct email please.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n          title: \"Confirm\",\n          type: \"submit\",\n          disabled: !formIsValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangeEmailModal, \"bpifkAQ2tAdQiVhjRyikalPH1GA=\", false, function () {\n  return [useDispatch, useInput, useInput];\n});\n_c = ChangeEmailModal;\nexport default ChangeEmailModal;\nvar _c;\n$RefreshReg$(_c, \"ChangeEmailModal\");","map":{"version":3,"names":["React","useDispatch","useInput","modalActions","callNotification","MainButton","Modal","EmailInput","classes","ChangeEmailModal","props","dispatch","value","enteredEmail","hasError","emailInputHasError","isValid","enteredEmailIsValid","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","reset","resetEmailInput","includes","trim","length","enteredEmailRepeat","emailInputHasErrorRepeat","enteredEmailIsValidRepeat","emailChangedHandlerRepeat","emailBlurHandlerRepeat","resetEmailInputRepeat","resetForm","validationError","formIsValid","submitHandler","event","preventDefault","sendRequest","response","fetch","method","body","JSON","stringify","email","headers","Authorization","localStorage","getItem","document","activeElement","blur","ok","Error","closeModal","err","message","show","container","title","errorText"],"sources":["/Users/ivylou/Desktop/pythonProject/keysee/src/components/Header/MenuModals/CnahgeEmailModal.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useInput from \"../../../hooks/use-input\";\nimport { modalActions } from \"../../../store/modals\";\nimport { callNotification } from \"../../../store/notification-actions\";\nimport MainButton from \"../../Reusable/MainButton\";\nimport Modal from \"../../Reusable/Modal\";\nimport EmailInput from \"../../Reusable/PasswordInput\";\n\nimport classes from \"./ChangePasswordModal.module.css\";\n\nconst ChangeEmailModal = (props) => {\n  const dispatch = useDispatch();\n\n  let {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(\n    (value) =>\n      value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6\n  );\n\n  let {\n    value: enteredEmailRepeat,\n    hasError: emailInputHasErrorRepeat,\n    isValid: enteredEmailIsValidRepeat,\n    valueChangeHandler: emailChangedHandlerRepeat,\n    inputBlurHandler: emailBlurHandlerRepeat,\n    reset: resetEmailInputRepeat,\n  } = useInput(\n    (value) =>\n      value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6\n  );\n\n  const resetForm = () => {\n    resetEmailInput();\n    resetEmailInputRepeat();\n  };\n\n  let validationError;\n  if (emailInputHasError || emailInputHasErrorRepeat) {\n    validationError = true;\n  }\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredEmail === enteredEmailRepeat) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const sendRequest = async () => {\n      const response = await fetch(\"api/v1/edit_profile\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          email: enteredEmail,\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      document.activeElement.blur();\n      resetEmailInput();\n      resetEmailInputRepeat();\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong. Please try again.\");\n      }\n\n      dispatch(modalActions.closeModal());\n      dispatch(\n        callNotification(\"success\", \"Your email has been changed successfully!\")\n      );\n    };\n\n    try {\n      sendRequest();\n    } catch (err) {\n      dispatch(callNotification(\"error\", err.message));\n    }\n  };\n\n  return (\n    <Modal modalType=\"changeEmail\" reset={resetForm} show={props.show}>\n      <div className={classes.container}>\n        <span className={classes.title}>Change email</span>\n        <form onSubmit={submitHandler}>\n          <div className=\"inputsContainer\">\n            <EmailInput\n              inputType=\"email\"\n              enteredEmail={enteredEmail}\n              emailInputHasError={emailInputHasError}\n              enteredEmailIsValid={enteredEmailIsValid}\n              emailChangedHandler={emailChangedHandler}\n              emailBlurHandler={emailBlurHandler}\n              resetEmailInput={resetEmailInput}\n              placeholder=\"New email\"\n            />\n            <EmailInput\n              inputType=\"email\"\n              enteredEmail={enteredEmailRepeat}\n              emailInputHasError={emailInputHasErrorRepeat}\n              enteredEmailIsValid={enteredEmailIsValidRepeat}\n              emailChangedHandler={emailChangedHandlerRepeat}\n              emailBlurHandler={emailBlurHandlerRepeat}\n              resetEmailInput={resetEmailInputRepeat}\n              placeholder=\"Repeat email\"\n            />\n          </div>\n          {validationError && (\n            <span className={classes.errorText}>\n              Enter correct email please.\n            </span>\n          )}\n          <MainButton title=\"Confirm\" type=\"submit\" disabled={!formIsValid} />\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ChangeEmailModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}