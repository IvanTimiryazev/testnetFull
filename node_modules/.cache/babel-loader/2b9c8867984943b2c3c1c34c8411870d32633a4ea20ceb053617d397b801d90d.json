{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../store/auth\";\nconst useInput = validateValue => {\n  _s();\n  const dispatch = useDispatch();\n  const isError = useSelector(state => state.auth.error);\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n  const inputFocusHandler = () => {\n    dispatch(authActions.removeError);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    hasError,\n    isValid: valueIsValid,\n    valueChangeHandler,\n    inputBlurHandler,\n    inputFocusHandler,\n    reset\n  };\n};\n_s(useInput, \"Lk/3SghiKipAdp8Zd7tZyAaCQCg=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport default useInput;","map":{"version":3,"names":["useState","useDispatch","useSelector","authActions","useInput","validateValue","dispatch","isError","state","auth","error","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurHandler","inputFocusHandler","removeError","reset","isValid"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/hooks/use-input.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../store/auth\";\n\nconst useInput = (validateValue) => {\n  const dispatch = useDispatch();\n  const isError = useSelector((state) => state.auth.error);\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const inputFocusHandler = () => {\n    dispatch(authActions.removeError);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    isValid: valueIsValid,\n    valueChangeHandler,\n    inputBlurHandler,\n    inputFocusHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,eAAe;AAE3C,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,OAAO,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;EAExD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,YAAY,GAAGV,aAAa,CAACM,YAAY,CAAC;EAChD,MAAMK,QAAQ,GAAG,CAACD,YAAY,IAAIF,SAAS;EAE3C,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC7BP,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMQ,iBAAiB,GAAG,MAAM;IAC9BhB,QAAQ,CAACH,WAAW,CAACoB,WAAW,CAAC;EACnC,CAAC;EAED,MAAMC,KAAK,GAAG,MAAM;IAClBZ,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLM,KAAK,EAAET,YAAY;IACnBK,QAAQ;IACRS,OAAO,EAAEV,YAAY;IACrBE,kBAAkB;IAClBI,gBAAgB;IAChBC,iBAAiB;IACjBE;EACF,CAAC;AACH,CAAC;AAAC,GApCIpB,QAAQ;EAAA,QACKH,WAAW,EACZC,WAAW;AAAA;AAoC7B,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}