{"ast":null,"code":"var _jsxFileName = \"/Users/ivylou/Desktop/pythonProject/keysee/src/components/Header/MenuModals/ChangePasswordModal.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useInput from \"../../../hooks/use-input\";\nimport { modalActions } from \"../../../store/modals\";\nimport { callNotification } from \"../../../store/notification-actions\";\nimport MainButton from \"../../Reusable/MainButton\";\nimport Modal from \"../../Reusable/Modal\";\nimport PasswordInput from \"../../Reusable/PasswordInput\";\nimport classes from \"./ChangePasswordModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePasswordModal = props => {\n  _s();\n  const dispatch = useDispatch();\n  let {\n    value: enteredPasswordOld,\n    hasError: passwordInputHasErrorOld,\n    isValid: enteredPasswordIsValidOld,\n    valueChangeHandler: passwordChangedHandlerOld,\n    inputBlurHandler: passwordBlurHandlerOld,\n    reset: resetPasswordInputOld\n  } = useInput(value => value.trim().length >= 6);\n  let {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim().length >= 6);\n  let {\n    value: enteredPasswordRepeat,\n    hasError: passwordInputHasErrorRepeat,\n    isValid: enteredPasswordIsValidRepeat,\n    valueChangeHandler: passwordChangedHandlerRepeat,\n    inputBlurHandler: passwordBlurHandlerRepeat,\n    reset: resetPasswordInputRepeat\n  } = useInput(value => value.trim().length >= 6);\n  const resetForm = () => {\n    resetPasswordInputOld();\n    resetPasswordInput();\n    resetPasswordInputRepeat();\n  };\n  let validationError;\n  if (passwordInputHasErrorOld || passwordInputHasError || passwordInputHasErrorRepeat) {\n    validationError = true;\n  }\n  let formIsValid = false;\n  if (enteredPasswordIsValid && enteredPassword === enteredPasswordRepeat) {\n    formIsValid = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\"api/v1/edit_password\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          current_password: enteredPasswordOld,\n          password: enteredPassword\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      document.activeElement.blur();\n      resetPasswordInputOld();\n      resetPasswordInput();\n      resetPasswordInputRepeat();\n      if (!response.ok) {\n        if (response.status === 400) {\n          throw new Error(\"Wrong current password.\");\n        } else {\n          throw new Error(\"Something went wrong. Please try again.\");\n        }\n      }\n      dispatch(modalActions.closeModal());\n      dispatch(callNotification(\"success\", \"Your password has been changed successfully!\"));\n    };\n    try {\n      sendRequest();\n    } catch (err) {\n      dispatch(callNotification(\"error\", err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    modalType: \"changePassword\",\n    reset: resetForm,\n    show: props.show,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.title,\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(PasswordInput, {\n            inputType: \"password\",\n            enteredPassword: enteredPasswordOld,\n            passwordInputHasError: passwordInputHasErrorOld,\n            enteredPasswordIsValid: enteredPasswordIsValidOld,\n            passwordChangedHandler: passwordChangedHandlerOld,\n            passwordBlurHandler: passwordBlurHandlerOld,\n            resetPasswordInput: resetPasswordInputOld,\n            placeholder: \"Current password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            inputType: \"password\",\n            enteredPassword: enteredPassword,\n            passwordInputHasError: passwordInputHasError,\n            enteredPasswordIsValid: enteredPasswordIsValid,\n            passwordChangedHandler: passwordChangedHandler,\n            passwordBlurHandler: passwordBlurHandler,\n            resetPasswordInput: resetPasswordInput,\n            placeholder: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            inputType: \"password\",\n            enteredPassword: enteredPasswordRepeat,\n            passwordInputHasError: passwordInputHasErrorRepeat,\n            enteredPasswordIsValid: enteredPasswordIsValidRepeat,\n            passwordChangedHandler: passwordChangedHandlerRepeat,\n            passwordBlurHandler: passwordBlurHandlerRepeat,\n            resetPasswordInput: resetPasswordInputRepeat,\n            placeholder: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), validationError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: \"Password can't be less then 6 symbols.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n          title: \"Confirm\",\n          type: \"submit\",\n          disabled: !formIsValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePasswordModal, \"FSlHpUcR2qRZxRz5/VK+WpzY6RM=\", false, function () {\n  return [useDispatch, useInput, useInput, useInput];\n});\n_c = ChangePasswordModal;\nexport default ChangePasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordModal\");","map":{"version":3,"names":["React","useDispatch","useInput","modalActions","callNotification","MainButton","Modal","PasswordInput","classes","ChangePasswordModal","props","dispatch","value","enteredPasswordOld","hasError","passwordInputHasErrorOld","isValid","enteredPasswordIsValidOld","valueChangeHandler","passwordChangedHandlerOld","inputBlurHandler","passwordBlurHandlerOld","reset","resetPasswordInputOld","trim","length","enteredPassword","passwordInputHasError","enteredPasswordIsValid","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","enteredPasswordRepeat","passwordInputHasErrorRepeat","enteredPasswordIsValidRepeat","passwordChangedHandlerRepeat","passwordBlurHandlerRepeat","resetPasswordInputRepeat","resetForm","validationError","formIsValid","submitHandler","event","preventDefault","sendRequest","response","fetch","method","body","JSON","stringify","current_password","password","headers","Authorization","localStorage","getItem","document","activeElement","blur","ok","status","Error","closeModal","err","message","show","container","title","errorText"],"sources":["/Users/ivylou/Desktop/pythonProject/keysee/src/components/Header/MenuModals/ChangePasswordModal.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useInput from \"../../../hooks/use-input\";\nimport { modalActions } from \"../../../store/modals\";\nimport { callNotification } from \"../../../store/notification-actions\";\nimport MainButton from \"../../Reusable/MainButton\";\nimport Modal from \"../../Reusable/Modal\";\nimport PasswordInput from \"../../Reusable/PasswordInput\";\n\nimport classes from \"./ChangePasswordModal.module.css\";\n\nconst ChangePasswordModal = (props) => {\n  const dispatch = useDispatch();\n\n  let {\n    value: enteredPasswordOld,\n    hasError: passwordInputHasErrorOld,\n    isValid: enteredPasswordIsValidOld,\n    valueChangeHandler: passwordChangedHandlerOld,\n    inputBlurHandler: passwordBlurHandlerOld,\n    reset: resetPasswordInputOld,\n  } = useInput((value) => value.trim().length >= 6);\n\n  let {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim().length >= 6);\n\n  let {\n    value: enteredPasswordRepeat,\n    hasError: passwordInputHasErrorRepeat,\n    isValid: enteredPasswordIsValidRepeat,\n    valueChangeHandler: passwordChangedHandlerRepeat,\n    inputBlurHandler: passwordBlurHandlerRepeat,\n    reset: resetPasswordInputRepeat,\n  } = useInput((value) => value.trim().length >= 6);\n\n  const resetForm = () => {\n    resetPasswordInputOld();\n    resetPasswordInput();\n    resetPasswordInputRepeat();\n  };\n\n  let validationError;\n  if (\n    passwordInputHasErrorOld ||\n    passwordInputHasError ||\n    passwordInputHasErrorRepeat\n  ) {\n    validationError = true;\n  }\n\n  let formIsValid = false;\n  if (enteredPasswordIsValid && enteredPassword === enteredPasswordRepeat) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const sendRequest = async () => {\n      const response = await fetch(\"api/v1/edit_password\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          current_password: enteredPasswordOld,\n          password: enteredPassword,\n        }),\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      document.activeElement.blur();\n      resetPasswordInputOld();\n      resetPasswordInput();\n      resetPasswordInputRepeat();\n\n      if (!response.ok) {\n        if (response.status === 400) {\n          throw new Error(\"Wrong current password.\");\n        } else {\n          throw new Error(\"Something went wrong. Please try again.\");\n        }\n      }\n\n      dispatch(modalActions.closeModal());\n      dispatch(\n        callNotification(\n          \"success\",\n          \"Your password has been changed successfully!\"\n        )\n      );\n    };\n\n    try {\n      sendRequest();\n    } catch (err) {\n      dispatch(callNotification(\"error\", err.message));\n    }\n  };\n\n  return (\n    <Modal modalType=\"changePassword\" reset={resetForm} show={props.show}>\n      <div className={classes.container}>\n        <span className={classes.title}>Change password</span>\n        <form onSubmit={submitHandler}>\n          <div className=\"inputsContainer\">\n            <PasswordInput\n              inputType=\"password\"\n              enteredPassword={enteredPasswordOld}\n              passwordInputHasError={passwordInputHasErrorOld}\n              enteredPasswordIsValid={enteredPasswordIsValidOld}\n              passwordChangedHandler={passwordChangedHandlerOld}\n              passwordBlurHandler={passwordBlurHandlerOld}\n              resetPasswordInput={resetPasswordInputOld}\n              placeholder=\"Current password\"\n            />\n            <PasswordInput\n              inputType=\"password\"\n              enteredPassword={enteredPassword}\n              passwordInputHasError={passwordInputHasError}\n              enteredPasswordIsValid={enteredPasswordIsValid}\n              passwordChangedHandler={passwordChangedHandler}\n              passwordBlurHandler={passwordBlurHandler}\n              resetPasswordInput={resetPasswordInput}\n              placeholder=\"New password\"\n            />\n            <PasswordInput\n              inputType=\"password\"\n              enteredPassword={enteredPasswordRepeat}\n              passwordInputHasError={passwordInputHasErrorRepeat}\n              enteredPasswordIsValid={enteredPasswordIsValidRepeat}\n              passwordChangedHandler={passwordChangedHandlerRepeat}\n              passwordBlurHandler={passwordBlurHandlerRepeat}\n              resetPasswordInput={resetPasswordInputRepeat}\n              placeholder=\"New password\"\n            />\n          </div>\n          {validationError && (\n            <span className={classes.errorText}>\n              Password can't be less then 6 symbols.\n            </span>\n          )}\n          <MainButton title=\"Confirm\" type=\"submit\" disabled={!formIsValid} />\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ChangePasswordModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}