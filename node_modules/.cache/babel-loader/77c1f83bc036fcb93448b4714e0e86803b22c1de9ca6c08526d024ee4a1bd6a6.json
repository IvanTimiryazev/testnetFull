{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Header/MenuModals/ChangePasswordModal.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../../../hooks/use-input\";\nimport { modalActions } from \"../../../store/modals\";\nimport MainButton from \"../../Reusable/MainButton\";\nimport Modal from \"../../Reusable/Modal\";\nimport PasswordInput from \"../../Reusable/PasswordInput\";\nimport classes from \"./ChangePasswordModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePasswordModal = () => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const {\n    value: enteredPasswordOld,\n    hasError: passwordInputHasErrorOld,\n    isValid: enteredPasswordIsValidOld,\n    valueChangeHandler: passwordChangedHandlerOld,\n    inputBlurHandler: passwordBlurHandlerOld,\n    reset: resetPasswordInputOld\n  } = useInput(value => value.trim().length >= 6);\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim().length >= 6);\n  const {\n    value: enteredPasswordRepeat,\n    hasError: passwordInputHasErrorRepeat,\n    isValid: enteredPasswordIsValidRepeat,\n    valueChangeHandler: passwordChangedHandlerRepeat,\n    inputBlurHandler: passwordBlurHandlerRepeat,\n    reset: resetPasswordInputRepeat\n  } = useInput(value => value.trim().length >= 6);\n  let validationError = false;\n  if (passwordInputHasErrorOld || passwordInputHasError || passwordInputHasErrorRepeat) {\n    validationError = true;\n  }\n  let formIsValid = false;\n  if (enteredPasswordIsValid && enteredPassword === enteredPasswordRepeat) {\n    formIsValid = true;\n  }\n\n  // ПРИ РЕНДЕРЕ МОДАЛКИ ЗАПУСКАЕТСЯ ФУНКЦИЯ, КОТОРАЯ ЗАПРАШИВАЕТ ИЗ БД ТЕКУЩИЙ ПАРОЛЬ ПОЛЬЗОВАТЕЛЯ\n  // И СОХРАНЯЕТ ЕГО В ПЕРЕМЕННОЙ\n  // ЭТА ПЕРЕМЕННАЯ СРАВНИВАЕТСЯ С enteredPasswordOld И РЕЗУЛЬТАТ ЭТОГО СРАВНЕНИЯ СОХРАНЯЕТСЯ В ДРУГОЙ ПЕРЕМЕННОЙ\n  // КОТОРАЯ В СВОЮ ОЧЕРЕДЬ ИСПОЛЬЗУЕТСЯ ПРИ ВАЛИДАЦИИ formIsValid\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const sendRequest = async () => {\n      const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: token,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n    };\n    sendRequest().catch(err => console.log(err.message));\n    //\n    // ОТОБРАЖАТЬ ОШИБКУ\n    //\n    dispatch(modalActions.closeModal());\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.title,\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.inputsContainer,\n          children: [/*#__PURE__*/_jsxDEV(PasswordInput, {\n            enteredPassword: enteredPasswordOld,\n            passwordInputHasError: passwordInputHasErrorOld,\n            enteredPasswordIsValid: enteredPasswordIsValidOld,\n            passwordChangedHandler: passwordChangedHandlerOld,\n            passwordBlurHandler: passwordBlurHandlerOld,\n            resetPasswordInput: resetPasswordInputOld,\n            placeholder: \"Old password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            enteredPassword: enteredPassword,\n            passwordInputHasError: passwordInputHasError,\n            enteredPasswordIsValid: enteredPasswordIsValid,\n            passwordChangedHandler: passwordChangedHandler,\n            passwordBlurHandler: passwordBlurHandler,\n            resetPasswordInput: resetPasswordInput,\n            placeholder: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            enteredPassword: enteredPasswordRepeat,\n            passwordInputHasError: passwordInputHasErrorRepeat,\n            enteredPasswordIsValid: enteredPasswordIsValidRepeat,\n            passwordChangedHandler: passwordChangedHandlerRepeat,\n            passwordBlurHandler: passwordBlurHandlerRepeat,\n            resetPasswordInput: resetPasswordInputRepeat,\n            placeholder: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), validationError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.errorText,\n            children: \"Password can't be less then 6 symbols.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n          title: \"Confirm\",\n          type: \"submit\",\n          disabled: !formIsValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePasswordModal, \"piM92OT6pVuk9SW+k9Tk50xDtKA=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput, useInput];\n});\n_c = ChangePasswordModal;\nexport default ChangePasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordModal\");","map":{"version":3,"names":["React","useDispatch","useSelector","useInput","modalActions","MainButton","Modal","PasswordInput","classes","ChangePasswordModal","dispatch","token","state","auth","value","enteredPasswordOld","hasError","passwordInputHasErrorOld","isValid","enteredPasswordIsValidOld","valueChangeHandler","passwordChangedHandlerOld","inputBlurHandler","passwordBlurHandlerOld","reset","resetPasswordInputOld","trim","length","enteredPassword","passwordInputHasError","enteredPasswordIsValid","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","enteredPasswordRepeat","passwordInputHasErrorRepeat","enteredPasswordIsValidRepeat","passwordChangedHandlerRepeat","passwordBlurHandlerRepeat","resetPasswordInputRepeat","validationError","formIsValid","submitHandler","event","preventDefault","sendRequest","response","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","console","log","ok","Error","catch","err","message","closeModal","container","title","inputsContainer","errorText"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Header/MenuModals/ChangePasswordModal.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../../../hooks/use-input\";\nimport { modalActions } from \"../../../store/modals\";\nimport MainButton from \"../../Reusable/MainButton\";\nimport Modal from \"../../Reusable/Modal\";\nimport PasswordInput from \"../../Reusable/PasswordInput\";\n\nimport classes from \"./ChangePasswordModal.module.css\";\n\nconst ChangePasswordModal = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n\n  const {\n    value: enteredPasswordOld,\n    hasError: passwordInputHasErrorOld,\n    isValid: enteredPasswordIsValidOld,\n    valueChangeHandler: passwordChangedHandlerOld,\n    inputBlurHandler: passwordBlurHandlerOld,\n    reset: resetPasswordInputOld,\n  } = useInput((value) => value.trim().length >= 6);\n\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim().length >= 6);\n\n  const {\n    value: enteredPasswordRepeat,\n    hasError: passwordInputHasErrorRepeat,\n    isValid: enteredPasswordIsValidRepeat,\n    valueChangeHandler: passwordChangedHandlerRepeat,\n    inputBlurHandler: passwordBlurHandlerRepeat,\n    reset: resetPasswordInputRepeat,\n  } = useInput((value) => value.trim().length >= 6);\n\n  let validationError = false;\n  if (\n    passwordInputHasErrorOld ||\n    passwordInputHasError ||\n    passwordInputHasErrorRepeat\n  ) {\n    validationError = true;\n  }\n\n  let formIsValid = false;\n  if (enteredPasswordIsValid && enteredPassword === enteredPasswordRepeat) {\n    formIsValid = true;\n  }\n\n  // ПРИ РЕНДЕРЕ МОДАЛКИ ЗАПУСКАЕТСЯ ФУНКЦИЯ, КОТОРАЯ ЗАПРАШИВАЕТ ИЗ БД ТЕКУЩИЙ ПАРОЛЬ ПОЛЬЗОВАТЕЛЯ\n  // И СОХРАНЯЕТ ЕГО В ПЕРЕМЕННОЙ\n  // ЭТА ПЕРЕМЕННАЯ СРАВНИВАЕТСЯ С enteredPasswordOld И РЕЗУЛЬТАТ ЭТОГО СРАВНЕНИЯ СОХРАНЯЕТСЯ В ДРУГОЙ ПЕРЕМЕННОЙ\n  // КОТОРАЯ В СВОЮ ОЧЕРЕДЬ ИСПОЛЬЗУЕТСЯ ПРИ ВАЛИДАЦИИ formIsValid\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: token,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n    };\n\n    sendRequest().catch((err) => console.log(err.message));\n    //\n    // ОТОБРАЖАТЬ ОШИБКУ\n    //\n    dispatch(modalActions.closeModal());\n  };\n\n  return (\n    <Modal>\n      <div className={classes.container}>\n        <span className={classes.title}>Change password</span>\n        <form onSubmit={submitHandler}>\n          <div className={classes.inputsContainer}>\n            <PasswordInput\n              enteredPassword={enteredPasswordOld}\n              passwordInputHasError={passwordInputHasErrorOld}\n              enteredPasswordIsValid={enteredPasswordIsValidOld}\n              passwordChangedHandler={passwordChangedHandlerOld}\n              passwordBlurHandler={passwordBlurHandlerOld}\n              resetPasswordInput={resetPasswordInputOld}\n              placeholder=\"Old password\"\n            />\n            <PasswordInput\n              enteredPassword={enteredPassword}\n              passwordInputHasError={passwordInputHasError}\n              enteredPasswordIsValid={enteredPasswordIsValid}\n              passwordChangedHandler={passwordChangedHandler}\n              passwordBlurHandler={passwordBlurHandler}\n              resetPasswordInput={resetPasswordInput}\n              placeholder=\"New password\"\n            />\n            <PasswordInput\n              enteredPassword={enteredPasswordRepeat}\n              passwordInputHasError={passwordInputHasErrorRepeat}\n              enteredPasswordIsValid={enteredPasswordIsValidRepeat}\n              passwordChangedHandler={passwordChangedHandlerRepeat}\n              passwordBlurHandler={passwordBlurHandlerRepeat}\n              resetPasswordInput={resetPasswordInputRepeat}\n              placeholder=\"New password\"\n            />\n            {validationError && (\n              <span className={classes.errorText}>\n                Password can't be less then 6 symbols.\n              </span>\n            )}\n          </div>\n          <MainButton title=\"Confirm\" type=\"submit\" disabled={!formIsValid} />\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ChangePasswordModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}