{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrykoptev/Documents/GitHub/keysee/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MainHeader from \"../components/Header/MainHeader\";\nimport FollowingsSection from \"../components/Followings/FollowingsSection\";\nimport TwitsSection from \"../components/Twits/TwitsSection\";\nimport KeySection from \"../components/Keys/KeySection\";\nimport Notification from \"../components/Notification/Notification\";\nimport { sendKeysData, fetchKeysData } from \"../store/keys-actions\";\nimport { sendAccountsData, fetchAccountsData } from \"../store/accounts-actions\";\nimport HeaderMenu from \"../components/Header/HeaderMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nconst MainPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.notification.notification);\n  const [showModal, setShowModal] = useState(false);\n  const keyList = useSelector(state => state.keyList);\n  const accountsList = useSelector(state => state.accountsList);\n\n  // *** KEYS ***\n  useEffect(() => {\n    dispatch(fetchKeysData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (keyList.changed) {\n      dispatch(sendKeysData(keyList));\n    }\n  }, [keyList, dispatch]);\n\n  // *** ACCOUNTS ***\n  useEffect(() => {\n    dispatch(fetchAccountsData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (accountsList.changed) {\n      dispatch(sendAccountsData(accountsList));\n    }\n  }, [accountsList, dispatch]);\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderMenu, {\n      onClose: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(FollowingsSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TwitsSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KeySection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPage, \"oLfuEWKtokJzY/3W39tyZBG0SS8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","MainHeader","FollowingsSection","TwitsSection","KeySection","Notification","sendKeysData","fetchKeysData","sendAccountsData","fetchAccountsData","HeaderMenu","isInitial","MainPage","dispatch","notification","state","showModal","setShowModal","keyList","accountsList","changed","closeModalHandler","status","title","message"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/pages/MainPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport MainHeader from \"../components/Header/MainHeader\";\nimport FollowingsSection from \"../components/Followings/FollowingsSection\";\nimport TwitsSection from \"../components/Twits/TwitsSection\";\nimport KeySection from \"../components/Keys/KeySection\";\nimport Notification from \"../components/Notification/Notification\";\nimport { sendKeysData, fetchKeysData } from \"../store/keys-actions\";\nimport { sendAccountsData, fetchAccountsData } from \"../store/accounts-actions\";\nimport HeaderMenu from \"../components/Header/HeaderMenu\";\n\nlet isInitial = true;\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.notification.notification);\n  const [showModal, setShowModal] = useState(false);\n  const keyList = useSelector((state) => state.keyList);\n  const accountsList = useSelector((state) => state.accountsList);\n\n  // *** KEYS ***\n  useEffect(() => {\n    dispatch(fetchKeysData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (keyList.changed) {\n      dispatch(sendKeysData(keyList));\n    }\n  }, [keyList, dispatch]);\n\n  // *** ACCOUNTS ***\n  useEffect(() => {\n    dispatch(fetchAccountsData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (accountsList.changed) {\n      dispatch(sendAccountsData(accountsList));\n    }\n  }, [accountsList, dispatch]);\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <MainHeader />\n      <HeaderMenu onClose={closeModalHandler} />\n      <main>\n        <FollowingsSection />\n        <TwitsSection />\n        <KeySection />\n      </main>\n    </>\n  );\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,iBAAiB,MAAM,4CAA4C;AAC1E,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,YAAY,MAAM,yCAAyC;AAClE,SAASC,YAAY,EAAEC,aAAa,QAAQ,uBAAuB;AACnE,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,2BAA2B;AAC/E,OAAOC,UAAU,MAAM,iCAAiC;AAAC;AAAA;AAEzD,IAAIC,SAAS,GAAG,IAAI;AAEpB,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,YAAY,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,YAAY,CAACA,YAAY,CAAC;EAC5E,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMoB,OAAO,GAAGlB,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACG,OAAO,CAAC;EACrD,MAAMC,YAAY,GAAGnB,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACI,YAAY,CAAC;;EAE/D;EACAtB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACN,aAAa,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,IAAIc,SAAS,EAAE;MACbA,SAAS,GAAG,KAAK;MACjB;IACF;IACA,IAAIO,OAAO,CAACE,OAAO,EAAE;MACnBP,QAAQ,CAACP,YAAY,CAACY,OAAO,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,CAACA,OAAO,EAAEL,QAAQ,CAAC,CAAC;;EAEvB;EACAhB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACJ,iBAAiB,EAAE,CAAC;EAC/B,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,IAAIc,SAAS,EAAE;MACbA,SAAS,GAAG,KAAK;MACjB;IACF;IACA,IAAIQ,YAAY,CAACC,OAAO,EAAE;MACxBP,QAAQ,CAACL,gBAAgB,CAACW,YAAY,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,CAACA,YAAY,EAAEN,QAAQ,CAAC,CAAC;EAE5B,MAAMQ,iBAAiB,GAAG,MAAM;IAC9BJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE;IAAA,WACGH,YAAY,iBACX,QAAC,YAAY;MACX,MAAM,EAAEA,YAAY,CAACQ,MAAO;MAC5B,KAAK,EAAER,YAAY,CAACS,KAAM;MAC1B,OAAO,EAAET,YAAY,CAACU;IAAQ;MAAA;MAAA;MAAA;IAAA,QAEjC,eACD,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd,QAAC,UAAU;MAAC,OAAO,EAAEH;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1C;MAAA,wBACE,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAChB,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBACN;AAEP,CAAC;AAAC,GA3DIT,QAAQ;EAAA,QACKb,WAAW,EACPC,WAAW,EAEhBA,WAAW,EACNA,WAAW;AAAA;AAAA,KAL5BY,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}