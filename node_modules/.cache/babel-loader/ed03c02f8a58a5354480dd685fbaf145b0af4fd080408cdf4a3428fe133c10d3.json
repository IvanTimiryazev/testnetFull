{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Login/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./LoginForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isError = useSelector(state => state.auth.error);\n  const [signIn, setSignIn] = useState(true);\n  const [passwordType, setPasswordType] = useState(true);\n  const [checkBox, setCheckBox] = useState(true);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput\n  } = useInput(value => !signIn ? value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6 : value.trim().length >= 1);\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim().length >= 1);\n  const checkBoxHandler = () => {\n    setCheckBox(prev => !prev);\n  };\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  // let validationError = false;\n  // if (!signIn && (emailInputHasError || passwordInputHasError)) {\n  //   validationError = true;\n  // }\n\n  const submitHandler = event => {\n    event.preventDefault();\n    let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\";\n    const sendRequest = async () => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Email or password was wrong\");\n      }\n      const data = await response.json();\n      dispatch(authActions.logIn(data.idToken));\n    };\n    sendRequest().catch(err => {\n      dispatch(authActions.showError(err.message));\n    });\n    history.replace(\"/\");\n    resetEmailInput();\n    resetPasswordInput();\n  };\n  const signInHandler = () => {\n    history.replace(\"/register\");\n    // setSignIn((prev) => !prev);\n  };\n\n  const seePasswordHandler = () => {\n    setPasswordType(prev => !prev);\n  };\n  const seePasswordClasses = passwordType ? `${classes.seePassword}` : `${classes.seePassword} ${classes.seeText}`;\n  const checkBoxClasses = !checkBox ? `${classes.checkBox}` : `${classes.checkBox} ${classes.checkedBox}`;\n  const emailInputClasses = emailInputHasError || isError ? `${classes.formInput} ${classes.wrongCredentials}` : `${classes.formInput}`;\n  const passwordInputClasses = passwordInputHasError || isError ? `${classes.formInput} ${classes.wrongCredentials}` : `${classes.formInput}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: classes.loginForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.newUser,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"New user?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: signInHandler,\n          children: \"Sign up.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          className: emailInputClasses,\n          value: enteredEmail,\n          onChange: emailChangedHandler,\n          onBlur: emailBlurHandler,\n          onFocus: emailFocusHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.passwordInput,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: passwordType ? \"password\" : \"text\",\n            placeholder: \"Password\",\n            className: passwordInputClasses,\n            value: enteredPassword,\n            onChange: passwordChangedHandler,\n            onBlur: passwordBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: seePasswordClasses,\n            onClick: seePasswordHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: isError.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), !isError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.stayLoggedIn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: checkBoxHandler,\n          className: checkBoxClasses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        className: classes.loginFormButton,\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.forgotPassword,\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoMain,\n      alt: \"keysee\",\n      className: classes.mainLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"rvb4HW1KFvDesYZYOGZNnjtMQNs=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useInput, useInput];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","classes","logoMain","useInput","useHistory","useDispatch","useSelector","authActions","LoginForm","history","dispatch","isError","state","auth","error","signIn","setSignIn","passwordType","setPasswordType","checkBox","setCheckBox","value","enteredEmail","hasError","emailInputHasError","isValid","enteredEmailIsValid","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","inputFocusHandler","emailFocusHandler","reset","resetEmailInput","includes","trim","length","enteredPassword","passwordInputHasError","enteredPasswordIsValid","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","checkBoxHandler","prev","formIsValid","submitHandler","event","preventDefault","url","sendRequest","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","ok","Error","data","json","logIn","idToken","catch","err","showError","message","replace","signInHandler","seePasswordHandler","seePasswordClasses","seePassword","seeText","checkBoxClasses","checkedBox","emailInputClasses","formInput","wrongCredentials","passwordInputClasses","container","loginForm","newUser","inputsContainer","passwordInput","errorText","errorMessage","stayLoggedIn","loginFormButton","forgotPassword","mainLogo"],"sources":["/Users/dmitrykoptev/Documents/GitHub/keysee/src/components/Login/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport classes from \"./LoginForm.module.css\";\nimport logoMain from \"../../images/LogoMain.png\";\nimport useInput from \"../../hooks/use-input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isError = useSelector((state) => state.auth.error);\n  const [signIn, setSignIn] = useState(true);\n  const [passwordType, setPasswordType] = useState(true);\n  const [checkBox, setCheckBox] = useState(true);\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    inputFocusHandler: emailFocusHandler,\n    reset: resetEmailInput,\n  } = useInput((value) =>\n    !signIn\n      ? value.includes(\"@\") && value.includes(\".\") && value.trim().length >= 6\n      : value.trim().length >= 1\n  );\n\n  const {\n    value: enteredPassword,\n    hasError: passwordInputHasError,\n    isValid: enteredPasswordIsValid,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim().length >= 1);\n\n  const checkBoxHandler = () => {\n    setCheckBox((prev) => !prev);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  // let validationError = false;\n  // if (!signIn && (emailInputHasError || passwordInputHasError)) {\n  //   validationError = true;\n  // }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBD3lPiWWjbfHBAvg0UlC2IOXOzKqlhSTY\";\n\n    const sendRequest = async () => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Email or password was wrong\");\n      }\n\n      const data = await response.json();\n      dispatch(authActions.logIn(data.idToken));\n    };\n\n    sendRequest().catch((err) => {\n      dispatch(authActions.showError(err.message));\n    });\n\n    history.replace(\"/\");\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const signInHandler = () => {\n    history.replace(\"/register\");\n    // setSignIn((prev) => !prev);\n  };\n\n  const seePasswordHandler = () => {\n    setPasswordType((prev) => !prev);\n  };\n\n  const seePasswordClasses = passwordType\n    ? `${classes.seePassword}`\n    : `${classes.seePassword} ${classes.seeText}`;\n\n  const checkBoxClasses = !checkBox\n    ? `${classes.checkBox}`\n    : `${classes.checkBox} ${classes.checkedBox}`;\n\n  const emailInputClasses =\n    emailInputHasError || isError\n      ? `${classes.formInput} ${classes.wrongCredentials}`\n      : `${classes.formInput}`;\n\n  const passwordInputClasses =\n    passwordInputHasError || isError\n      ? `${classes.formInput} ${classes.wrongCredentials}`\n      : `${classes.formInput}`;\n\n  return (\n    <div className={classes.container}>\n      <form onSubmit={submitHandler} className={classes.loginForm}>\n        <h1>Sign In</h1>\n        <div className={classes.newUser}>\n          <p>New user?</p>\n          <span onClick={signInHandler}>Sign up.</span>\n        </div>\n        <div className={classes.inputsContainer}>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            className={emailInputClasses}\n            value={enteredEmail}\n            onChange={emailChangedHandler}\n            onBlur={emailBlurHandler}\n            onFocus={emailFocusHandler}\n          ></input>\n          <div className={classes.passwordInput}>\n            <input\n              type={passwordType ? \"password\" : \"text\"}\n              placeholder=\"Password\"\n              className={passwordInputClasses}\n              value={enteredPassword}\n              onChange={passwordChangedHandler}\n              onBlur={passwordBlurHandler}\n            ></input>\n            <div\n              className={seePasswordClasses}\n              onClick={seePasswordHandler}\n            ></div>\n          </div>\n        </div>\n        {/* {validationError && (\n          <p className={classes.errorText}>\n            Please enter correct email & password.\n          </p>\n        )} */}\n        {isError && <p className={classes.errorText}>{isError.errorMessage}</p>}\n        {!isError && (\n          <div className={classes.stayLoggedIn}>\n            <div onClick={checkBoxHandler} className={checkBoxClasses}></div>\n            <span>Remember me</span>\n          </div>\n        )}\n        <button\n          disabled={!formIsValid}\n          className={classes.loginFormButton}\n          type=\"submit\"\n        >\n          Sign In\n        </button>\n        <div className={classes.forgotPassword}>Forgot password?</div>\n      </form>\n      <img src={logoMain} alt=\"keysee\" className={classes.mainLogo} />\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}